<?php

/**
 * @file
 * Install, update and uninstall functions for oe_corporate_countries module.
 */

declare(strict_types = 1);

use Drupal\Core\Entity\EntityDefinitionUpdateManager;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\StringTranslation\TranslatableMarkup;

/**
 * Implements hook_install().
 */
function oe_corporate_countries_install() {
  // Install the newly defined SKOS Concept defined fields.
  $manager = \Drupal::entityDefinitionUpdateManager();
  $definition = BaseFieldDefinition::create('string')
    ->setLabel(t('Deprecated'))
    ->setDescription(t('Whether the country is deprecated or not.'))
    ->setCardinality(1);

  $manager->installFieldStorageDefinition('deprecated', 'skos_concept', 'rdf_skos', $definition);
  \Drupal::logger('oe_content')->info('The following SKOS field definition has been installed: @definition.', ['@definition' => 'deprecated']);

  if (\Drupal::service('config.installer')->isSyncing()) {
    return;
  }

  $country_graph = [
    'name' => 'country',
    'uri' => 'http://publications.europa.eu/resource/authority/country',
  ];

  $config = \Drupal::configFactory()->getEditable('rdf_skos.graphs');
  $entity_types = $config->get('entity_types');
  $changed = FALSE;

  foreach (['skos_concept_scheme', 'skos_concept'] as $type) {
    // Make sure the key exists.
    if (!isset($entity_types[$type])) {
      $entity_types[$type] = [];
    }

    // Find if the country graph is already configured. If not, add it to the
    // list.
    $key = array_search($country_graph, $entity_types[$type]);
    if ($key === FALSE) {
      $entity_types[$type][] = $country_graph;
      $changed = TRUE;
    }
  }

  // Save the configuration only if graphs were added.
  if ($changed) {
    $config->set('entity_types', $entity_types)->save();
  }
}

/**
 * Install the newly defined SKOS Concept defined fields.
 *
 * Since we are running this update hook after the SKOS fields have been
 * defined, we need to check if they have not been already installed. If they
 * have, we bail out and don't fail the update path.
 */
function oe_corporate_countries_update_8101(): TranslatableMarkup {
  $manager = \Drupal::entityDefinitionUpdateManager();
  $change_list = $manager->getChangeList();
  $changed_definitions = $change_list['skos_concept']['field_storage_definitions'] ?? [];
  if (!$changed_definitions || !isset($changed_definitions['deprecated']) || $changed_definitions['deprecated'] !== EntityDefinitionUpdateManager::DEFINITION_CREATED) {
    return t('No SKOS field definitions had to be updated.');
  }

  $definition = BaseFieldDefinition::create('string')
    ->setLabel(t('Deprecated'))
    ->setDescription(t('Whether the country is deprecated or not.'))
    ->setCardinality(1);

  $manager->installFieldStorageDefinition('deprecated', 'skos_concept', 'rdf_skos', $definition);

  return t('The following SKOS field definition has been installed: @definition.', ['@definition' => 'deprecated']);
}
