<?php

/**
 * @file
 * Install, update and uninstall functions for oe_corporate_countries module.
 */

declare(strict_types = 1);

use Drupal\Core\Field\BaseFieldDefinition;

/**
 * Implements hook_install().
 */
function oe_corporate_countries_install() {
  // Install the newly defined SKOS Concept defined fields.
  /** @var \Drupal\rdf_skos\SkosEntityDefinitionUpdateManager $update_manager */
  $update_manager = \Drupal::service('rdf_skos.skos_entity_definition_update_manager');
  $definitions = [];
  $definitions['deprecated'] = BaseFieldDefinition::create('string')
    ->setLabel(t('Deprecated'))
    ->setDescription(t('Whether the country is deprecated or not.'))
    ->setCardinality(1)
    ->setProvider('rdf_skos');

  $installed = $update_manager->installFieldDefinitions('skos_concept', $definitions);
  \Drupal::logger('oe_corporate_countries')->info('The following SKOS field definitions have been installed: @definitions.', ['@definitions' => implode(', ', $installed)]);

  // Bail out if we are installing from config.
  if (\Drupal::service('config.installer')->isSyncing()) {
    return;
  }

  $country_graph = [
    'name' => 'country',
    'uri' => 'http://publications.europa.eu/resource/authority/country',
  ];

  $config = \Drupal::configFactory()->getEditable('rdf_skos.graphs');
  $entity_types = $config->get('entity_types');
  $changed = FALSE;

  foreach (['skos_concept_scheme', 'skos_concept'] as $type) {
    // Make sure the key exists.
    if (!isset($entity_types[$type])) {
      $entity_types[$type] = [];
    }

    // Find if the country graph is already configured. If not, add it to the
    // list.
    $key = array_search($country_graph, $entity_types[$type]);
    if ($key === FALSE) {
      $entity_types[$type][] = $country_graph;
      $changed = TRUE;
    }
  }

  // Save the configuration only if graphs were added.
  if ($changed) {
    $config->set('entity_types', $entity_types)->save();
  }
}

/**
 * Install the newly defined SKOS Concept defined fields.
 */
function oe_corporate_countries_update_8101(): TranslatableMarkup {
  // Invalidate the container to try to ensure the new service definition gets
  // picked up.
  \Drupal::service('kernel')->invalidateContainer();
  /** @var \Drupal\rdf_skos\SkosEntityDefinitionUpdateManager $update_manager */
  $update_manager = \Drupal::service('rdf_skos.skos_entity_definition_update_manager');
  $definitions = [];
  $definitions['deprecated'] = BaseFieldDefinition::create('string')
    ->setLabel(t('Deprecated'))
    ->setDescription(t('Whether the country is deprecated or not.'))
    ->setCardinality(1)
    ->setProvider('rdf_skos');

  $installed = $update_manager->installFieldDefinitions('skos_concept', $definitions);
  if (!$installed) {
    return t('No SKOS field definitions had to be updated.');
  }

  return t('The following SKOS field definitions have been installed: @definitions.', ['@definitions' => implode(', ', $installed)]);
}
